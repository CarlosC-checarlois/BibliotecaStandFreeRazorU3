@page
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model BibliotecaStandFree.Pages.LoginModel
@{
    ViewData["Title"] = "Iniciar Sesión - BibliotecaStand";
}

@section stylesheets_superiores {
    <link rel="stylesheet" href="~/css/styles.css"/>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css">
    <link href="https://fonts.googleapis.com/css2?family=Dancing+Script&display=swap" rel="stylesheet">
    <style>
    .contenedor_login {
        background-color: #ffe8b6;
        border-radius: 8px;
        width: 100%;
        max-width: 400px;
        padding: 2rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .section_login {
        min-height: calc(100vh - 120px);
        display: flex;
        justify-content: center;
        align-items: center;
    }

    button[type="submit"] {
        background-color: #333;
        color: #fff;
        font-weight: bold;
        transition: background-color 0.3s ease;
    }

    button[type="submit"]:hover {
        background-color: #555;
    }

    .btn-wsp {
        position: fixed;
        width: 60px;
        height: 60px;
        bottom: 25px;
        right: 25px;
        background: #fff;
        color: #FFF;
        border-radius: 50%;
        text-align: center;
        font-size: 35px;
        box-shadow: 0px 1px 10px rgba(0, 0, 0, 0.3);
        z-index: 100;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .btn-wsp:hover {
        background: #d0ffd9;
    }

    .btn-wsp img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: 50%;
    }
</style>
    <style>
    /* Contenedor del carrito */
    .carrito-container {
        display: flex;
        align-items: center;
    }

    /* Texto del carrito (visible en pantallas pequeñas y medianas) */
    .carrito-texto {
        display: none; /* Oculto por defecto */
        font-size: 16px;
        text-decoration: none;
        color: #333;
    }

    /* Ícono del carrito (visible por defecto en pantallas grandes) */
    .carrito-icono {
        display: none; /* Oculto por defecto */
        align-items: center;
        text-decoration: none;
        color: #333;
        font-size: 20px;
        position: relative;
    }

    /* Media query para pantallas pequeñas y medianas (≤ 992px) */
    @@media (max-width: 992px) {
    .carrito-texto {
        display: inline-block; /* Mostrar texto */
    }

    .carrito-icono {
        display: none; /* Ocultar ícono */
    }
    }

    /* Media query para pantallas grandes (> 992px) */
    @@media (min-width: 993px) {
    .carrito-texto {
        display: inline-block;
    }

    .carrito-icono {
        display: none; /* Ocultar ícono */
    }
    }

    .table-hover tbody tr:hover {
        background-color: #f9f9f9;
    }

    .bg-secondary {
        background-color: #6c757d !important;
    }

    .bg-warning {
        background-color: #ffe8b6 !important;
    }

    .text-dark {
        color: #343a40 !important;
    }
</style>
    <style>
    /* Contenedor de mensajes flotantes */
    .floating-messages-container {
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 1000;
        max-width: 320px;
        font-family: 'Georgia', serif; /* Fuente más amigable */
    }

    /* Estilo base para los mensajes */
    .floating-message {
        margin-bottom: 10px;
        padding: 15px;
        border-radius: 8px;
        font-size: 15px;
        display: flex;
        align-items: center;
        justify-content: space-between;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
        background: linear-gradient(to bottom, #fff9f0, #fff3e6); /* Fondo cálido */
        opacity: 0; /* Por defecto invisible */
        transform: translateY(-20px); /* Posición inicial para animación */
        transition: opacity 0.5s ease, transform 0.5s ease;
        border: 1px solid #d6ccc2; /* Borde suave */
    }


    /* Animación de entrada (fade-in) */
    .floating-message.fade-in {
        opacity: 1;
        transform: translateY(0); /* Volver a la posición original */
    }

    /* Animación de salida (fade-out) */
    .floating-message.fade-out {
        opacity: 0;
        transform: translateY(-20px); /* Desplazar hacia arriba al salir */
    }

    .floating-message-success {
        background: linear-gradient(to bottom, #fbeec1, #f5d19a); /* Gradiente cálido estilo cafetería */
        color: #5c3d2e; /* Texto en marrón oscuro */
        border: 1px solid #e5b887; /* Borde marrón suave */
        box-shadow: 0px 4px 6px rgba(92, 61, 46, 0.3); /* Sombra para dar profundidad */
    }

    /* Efecto hover para el mensaje de éxito */
    .floating-message-success:hover {
        background: linear-gradient(to bottom, #f5d19a, #fbeec1); /* Invertir el gradiente al pasar */
        box-shadow: 0px 6px 10px rgba(92, 61, 46, 0.5); /* Aumentar la sombra al pasar */
    }

    .floating-message-error {
        background: linear-gradient(to bottom, #fce4e4, #f8b8b8); /* Gradiente de tonos rosados suaves */
        color: #8b1e24; /* Texto en un rojo marrón oscuro */
        border: 1px solid #e78d8d; /* Borde rojo suave */
        box-shadow: 0px 4px 6px rgba(139, 30, 36, 0.3); /* Sombra para dar profundidad */
        font-family: 'Arial', sans-serif; /* Fuente profesional */
        padding: 15px;
        border-radius: 8px; /* Bordes más redondeados */
        animation: shake 0.3s ease-in-out; /* Animación de sacudida suave */
    }

    /* Hover Effect */
    .floating-message-error:hover {
        background: linear-gradient(to bottom, #f8b8b8, #fce4e4); /* Invertir gradiente al pasar */
        box-shadow: 0px 6px 10px rgba(139, 30, 36, 0.5); /* Aumentar la sombra */
    }

    .floating-message-warning {
        background-color: #fff3cd;
        color: #856404;
        border: 1px solid #ffeeba;
    }

    .floating-message-info {
        background-color: #d1ecf1;
        color: #0c5460;
        border: 1px solid #bee5eb;
    }

    /* Botón de cierre */
    .floating-message .close-btn {
        margin-left: 15px;
        color: inherit;
        cursor: pointer;
        font-size: 16px;
        font-weight: bold;
        line-height: 1;
        background: none;
        border: none;
    }

    .floating-message .close-btn:hover {
        opacity: 0.7;
    }

    @@keyframes shake {
        0%, 100% {
            transform: translateX(0);
        }
        25% {
            transform: translateX(-5px);
        }
        50% {
            transform: translateX(5px);
        }
        75% {
            transform: translateX(-5px);
        }
    }
</style>
    <script src="~/js/modal.js"></script>
    <script src="https://kit.fontawesome.com/eb496ab1a0.js" crossorigin="anonymous"></script>
}

<section class="section_login">
    <div class="contenedor_login">
        <h3 class="vision_h3_span">Iniciar Sesión</h3>
        @if (!string.IsNullOrEmpty(Model.ErrorMessage))
        {
            <div class="alert alert-danger" role="alert">
                @Model.ErrorMessage
            </div>
        }
        <form method="post">
            <!-- Campo Correo Electrónico -->
            <div class="mb-3">
                <label asp-for="Input.Email" class="form-label" style="font-weight: bold;">Correo Electrónico</label>
                <input asp-for="Input.Email" class="form-control" placeholder="Ingresa tu correo electrónico"/>
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
            <!-- Campo Contraseña -->
            <div class="mb-3">
                <label asp-for="Input.Password" class="form-label" style="font-weight: bold;">Contraseña</label>
                <input asp-for="Input.Password" type="password" class="form-control" placeholder="Ingresa tu contraseña"/>
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            <!-- Mensaje de Registro -->
            <div class="text-start">
                <p>
                    ¿Aún no tienes una cuenta?
                    <a href="/Register" class="text-danger" style="font-size: 0.9rem;">
                        Regístrate aquí
                    </a>
                </p>
            </div>
            <!-- Botón de Enviar -->
            <button type="submit" class="btn btn-dark w-100 mt-3">Enviar</button>
        </form>
    </div>
</section>

@section stylesheets_inferiores {
    <script>
    document.addEventListener("DOMContentLoaded", () => {
        const loginForm = document.getElementById("loginForm");
        loginForm.addEventListener("submit", function (e) {
            const email = document.getElementById("email").value;
            const contraseña = document.getElementById("contraseña").value;

            // Validar que los campos no estén vacíos
            if (!email || !contraseña) {
                e.preventDefault();
                alert('Por favor, completa todos los campos.');
            }
        });
    });
</script>
    <script>
    document.getElementById('loginForm').addEventListener('submit', function (e) {
        e.preventDefault();

        const email = document.getElementById('email').value;
        const contraseña = document.getElementById('contraseña').value;

        // Validar que los campos no estén vacíos
        if (!email || !contraseña) {
            alert('Por favor, completa todos los campos.');
            return;
        }

        // Hacer la solicitud POST al servidor
        fetch(window.location.href, {
            method: 'POST',
            headers: {
                'X-CSRFToken': 'azk2o2SlH58aL8AZofUz0bR0eFs8u2deqI02pXlhwWKyUab0vm4MuAgHe52IUbn6',
                'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: new URLSearchParams({
                usuario: email,  // Correo electrónico como "usuario"
                contraseña: contraseña,
            }),
        })
            .then(response => {
                if (response.ok) {
                    // Redirigir al inicio si las credenciales son correctas
                    window.location.href = "/";
                } else {
                    return response.text().then(() => {
                        alert('Correo electrónico o contraseña incorrectos.');
                    });
                }
            })
            .catch(error => {
                console.error('Error al iniciar sesión:', error);
                alert('Error al procesar la solicitud.');
            });
    });
    document.addEventListener("DOMContentLoaded", () => {
        const carritoTexto = document.querySelector(".carrito-texto");
        const carritoIcono = document.querySelector(".carrito-icono");

        function actualizarCarrito() {
            const anchoVentana = window.innerWidth;

            if (anchoVentana <= 550) {
                carritoTexto.style.display = "none"; // Ocultar texto en pantallas muy pequeñas
                carritoIcono.style.display = "flex"; // Mostrar ícono
            } else if (anchoVentana > 550 && anchoVentana <= 992) {
                carritoTexto.style.display = "inline-block"; // Mostrar texto en pantallas medianas
                carritoIcono.style.display = "none"; // Ocultar ícono
            } else {
                carritoTexto.style.display = "inline-block"; // Mostrar texto en pantallas grandes
                carritoIcono.style.display = "none"; // Ocultar ícono
            }
        }

        // Ejecutar al cargar la página
        actualizarCarrito();

        // Ejecutar al redimensionar la ventana
        window.addEventListener("resize", actualizarCarrito);
    });
</script>
    <script src="~/js/main.js"></script>
    <script src="~/js/modal.js"></script>
    <script>
    document.addEventListener("DOMContentLoaded", function () {
        const floatingMessages = document.querySelectorAll(".floating-message");

        floatingMessages.forEach((message) => {
            // Animación de entrada (fade-in) al cargar el mensaje
            setTimeout(() => {
                message.classList.add("fade-in");
            }, 100); // Retraso mínimo para garantizar que la animación se vea

            // Animación de salida (fade-out) después de 3 segundos
            setTimeout(() => {
                message.classList.remove("fade-in");
                message.classList.add("fade-out"); // Aplicar clase de salida

                // Eliminar completamente el mensaje después de la animación de salida
                setTimeout(() => {
                    message.remove();
                }, 500); // 500 ms coincide con la duración de la transición CSS
            }, 3000); // Mostrar el mensaje durante 3 segundos antes de iniciar la salida
        });
    });
</script>
}