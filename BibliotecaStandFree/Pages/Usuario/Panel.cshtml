@page
@model BibliotecaStandFree.Pages.Usuario.PanelModel
@{
    ViewData["Title"] = "Panel de Usuario - BibliotecaStand";
}

@section stylesheets_superiores {
    <link rel="stylesheet" href="~/css/styles.css"/>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css">
    <link href="https://fonts.googleapis.com/css2?family=Dancing+Script&display=swap" rel="stylesheet">
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
    <style>
        .btn-wsp {
            position: fixed;
            width: 60px;
            height: 60px;
            bottom: 25px;
            right: 25px;
            background: #fff;
            color: #FFF;
            border-radius: 50%;
            text-align: center;
            font-size: 35px;
            box-shadow: 0px 1px 10px rgba(0, 0, 0, 0.3);
            z-index: 100;
            transition: all 300ms ease;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .btn-wsp:hover {
            background: #d0ffd9;
        }

        .btn-wsp img {
            width: 100%; /* Hace que la imagen ocupe todo el ancho del contenedor */
            height: 100%; /* Hace que la imagen ocupe toda la altura del contenedor */
            object-fit: cover; /* Ajusta la imagen para llenar completamente el contenedor sin distorsionar */
            border-radius: 50%; /* Mantiene el borde redondeado de la imagen */
        }

        @@media only screen and (min-width: 320px) and (max-width: 768px) {
        .btn-wsp {
            width: 63px;
            height: 63px;
        }

        .btn-wsp img {
            width: 100%; /* Ajusta el tamaño para que llene el nuevo tamaño del botón */
            height: 100%; /* Ajusta el tamaño para que llene el nuevo tamaño del botón */
        }
        }

    </style>
    <style>
        /*ESTILOS DE SWITCH*/
        .switch {
            width: 60px;
            height: 30px;
            padding: 0 5px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            position: relative;
            border-radius: 100px;
            border: #333333 solid 2px;
            background-color: #132b41;
        }

        .switch i {
            font-size: 1rem;
            color: #fdc21c;
        }

        .menu-options li:last-child::before {
            content: "";
            position: absolute;
            height: 25px;
            width: 25px;
            border-radius: 50%;
            background-color: #fff;
            border: solid thin #000;
            left: 0;
            right: unset;
        }

        .menu-options li:last-child.active::before {
            right: 0;
            left: unset;
            border: solid thin #fff;
        }

        .menu-options li:last-child.active i:first-child {
            color: #fff;
        }

        .menu-options li:last-child.active {
            background-color: chocolate;
            border: solid 2px #fff;
        }

        body.active .dark-header {
            background-color: #1f1f1f;
            color: #e0e0e0;
            border-bottom: 1px solid #444;
        }


        body.active .dark-header a {
            color: #e0e0e0; /* Cambiar color de enlaces */
        }

        body.active .dark-header a:hover {
            color: #ffd700; /* Color de hover para enlaces */
        }

        body.active .header {
            background-color: #313131;

        }


        body.active nav ul li a {
            color: #cfcfcf;
        }

        body.active nav ul li a {
            color: #cfcfcf;
        }

        body.active .header_info {
            background-color: #2c2c2c;
        }

        /* Tabla en modo oscuro */
        body.dark-mode .table {
            background-color: #1f1f1f; /* Fondo oscuro para la tabla */
            color: #e0e0e0; /* Texto claro */
            border-color: #444; /* Bordes oscuros */
        }

        /* Encabezado de la tabla en modo oscuro */
        body.dark-mode .table thead th {
            background-color: #2b2b2b; /* Fondo más oscuro para el encabezado */
            color: #e0e0e0; /* Texto claro en el encabezado */
        }

        /* Celdas de la tabla en modo oscuro */
        body.dark-mode .table td,
        body.dark-mode .table th {
            color: #e0e0e0; /* Texto claro para las celdas */
            border-color: #444; /* Bordes oscuros */
        }

        /* Hover sobre las filas en el modo oscuro */
        body.dark-mode .table tbody tr:hover {
            background-color: #2b2b2b; /* Fondo más claro al pasar el mouse */
        }

        /* Mensaje de "No tienes carritos registrados" en modo oscuro */
        body.dark-mode .table tbody tr td.text-center {
            color: #ccc; /* Texto claro para los mensajes */
        }

        /* Estilos para el h2 en modo oscuro */
        body.dark-mode h2.bg-warning {
            background-color: #2b2b2b; /* Fondo oscuro */
            color: #ffd700; /* Texto claro en amarillo dorado */
            border: 1px solid #444; /* Borde para darle contraste */
        }

        /* Opcional: Cambiar color del ícono */
        body.dark-mode h2.bg-warning i {
            color: #ffd700;
        }

        /* Modo oscuro: estilo para el h2 de bienvenida */
        body.dark-mode h2.bg-warning {
            background-color: #2c2c2c; /* Fondo oscuro */
            color: #ffffff; /* Texto blanco */
            border: 1px solid #444; /* Borde oscuro */
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3); /* Sombra sutil */
        }

        /* Cambiar color del icono en modo oscuro */
        body.dark-mode h2.bg-warning i {
            color: #ffd700; /* Amarillo dorado para el icono */
        }

        /* En modo oscuro, resaltar el nombre del usuario */
        body.dark-mode h2.bg-warning span {
            color: #ffd700; /* Amarillo dorado para el rol */
            font-weight: bold;
        }

        /* Estilo para el main en modo oscuro */
        body.dark-mode #panel_usuario {
            background-color: #121212; /* Fondo oscuro */
            color: #e0e0e0; /* Texto claro */
            border-radius: 8px; /* Opcional: redondear esquinas */
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.5); /* Sombra sutil */
        }

        /* Estilo para el section en modo oscuro */
        body.dark-mode .user-panel-section {
            background-color: #1f1f1f; /* Fondo ligeramente más claro que el main */
            color: #ffffff; /* Texto blanco */
            border: 1px solid #333; /* Borde oscuro para destacar */
            padding: 20px; /* Espaciado para que sea consistente */
            box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.5); /* Sombra interna */
        }

        /* Modo oscuro para el contenedor principal */
        body.dark-mode .col-12.d-flex.align-items-center {
            background-color: #1f1f1f; /* Fondo oscuro */
            color: #e0e0e0; /* Texto claro */
            border: 1px solid #333; /* Borde oscuro */
            padding: 15px; /* Espaciado interno */
            border-radius: 8px; /* Opcional: esquinas redondeadas */
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5); /* Sombra para destacar */
        }

        /* En modo oscuro, resaltar los íconos */
        body.dark-mode .col-12.d-flex.align-items-center i {
            color: #ffd700; /* Amarillo dorado para íconos */
        }

        /* En modo oscuro, estilos para el texto específico */
        body.dark-mode .col-12.d-flex.align-items-center h2 {
            color: #ffffff; /* Texto blanco */
            background-color: #2b2b2b; /* Fondo oscuro para el h2 */
            border: 1px solid #444; /* Borde más claro */
            padding: 10px; /* Espaciado interno */
            border-radius: 5px; /* Esquinas redondeadas */
        }

        /* En modo oscuro, resaltar el texto del rol y usuario */
        body.dark-mode .col-12.d-flex.align-items-center h2 span {
            color: #ffd700; /* Amarillo para resaltar el rol */
            font-weight: bold;
        }

        /* Modo oscuro para el h2 de bienvenida */
        body.dark-mode h2.bg-warning {
            background-color: #2c2c2c; /* Fondo oscuro */
            color: #ffffff; /* Texto blanco */
            border: 1px solid #444; /* Borde oscuro */
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5); /* Sombra sutil */
            transition: all 0.3s ease-in-out; /* Transición suave */
        }

        /* Cambiar color del ícono en modo oscuro */
        body.dark-mode h2.bg-warning i {
            color: #ffd700; /* Amarillo dorado para el ícono */
        }

        /* En modo oscuro, resaltar el texto del rol */
        body.dark-mode h2.bg-warning span {
            color: #ffd700; /* Amarillo dorado para resaltar el rol */
            font-weight: bold; /* Negrita para resaltar */
        }

        /* Modo oscuro para el contenedor principal */
        body.dark-mode .col-12.d-flex.align-items-center {
            background-color: #1f1f1f; /* Fondo oscuro */
            color: #e0e0e0; /* Texto claro */
            border: 1px solid #333; /* Borde oscuro */
            padding: 15px; /* Espaciado interno */
            border-radius: 8px; /* Esquinas redondeadas */
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5); /* Sombra sutil */
            transition: all 0.3s ease-in-out; /* Transición suave */
        }

        /* Modo oscuro para el h2 */
        body.dark-mode .col-12.d-flex.align-items-center h2 {
            background-color: #2c2c2c; /* Fondo oscuro para el h2 */
            color: #ffffff; /* Texto blanco */
            border: 1px solid #444; /* Borde oscuro */
            padding: 10px; /* Espaciado interno */
            border-radius: 8px; /* Esquinas redondeadas */
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5); /* Sombra */
        }

        /* Íconos dentro del h2 en modo oscuro */
        body.dark-mode .col-12.d-flex.align-items-center h2 i {
            color: #ffd700; /* Amarillo dorado para los íconos */
        }

        /* Resaltar el texto del rol en modo oscuro */
        body.dark-mode .col-12.d-flex.align-items-center h2 span {
            color: #ffd700; /* Amarillo dorado para el rol */
            font-weight: bold; /* Negrita para destacar */
        }


    </style>
    <style>
        /* Contenedor del carrito */
        .carrito-container {
            display: flex;
            align-items: center;
        }

        /* Texto del carrito (visible en pantallas pequeñas y medianas) */
        .carrito-texto {
            display: none; /* Oculto por defecto */
            font-size: 16px;
            text-decoration: none;
            color: #333;
        }

        /* Ícono del carrito (visible por defecto en pantallas grandes) */
        .carrito-icono {
            display: none; /* Oculto por defecto */
            align-items: center;
            text-decoration: none;
            color: #333;
            font-size: 20px;
            position: relative;
        }

        /* Media query para pantallas pequeñas y medianas (≤ 992px) */
        @@media (max-width: 992px) {
        .carrito-texto {
            display: inline-block; /* Mostrar texto */
        }

        .carrito-icono {
            display: none; /* Ocultar ícono */
        }
        }

        /* Media query para pantallas grandes (> 992px) */
        @@media (min-width: 993px) {
        .carrito-texto {
            display: inline-block;
        }

        .carrito-icono {
            display: none; /* Ocultar ícono */
        }
        }

        .table-hover tbody tr:hover {
            background-color: #f9f9f9;
        }

        .bg-secondary {
            background-color: #6c757d !important;
        }

        .bg-warning {
            background-color: #ffe8b6 !important;
        }

        .text-dark {
            color: #343a40 !important;
        }
    </style>
    <style>
        /* Contenedor de mensajes flotantes */
        .floating-messages-container {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1000;
            max-width: 320px;
            font-family: 'Georgia', serif; /* Fuente más amigable */
        }

        /* Estilo base para los mensajes */
        .floating-message {
            margin-bottom: 10px;
            padding: 15px;
            border-radius: 8px;
            font-size: 15px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
            background: linear-gradient(to bottom, #fff9f0, #fff3e6); /* Fondo cálido */
            opacity: 0; /* Por defecto invisible */
            transform: translateY(-20px); /* Posición inicial para animación */
            transition: opacity 0.5s ease, transform 0.5s ease;
            border: 1px solid #d6ccc2; /* Borde suave */
        }


        /* Animación de entrada (fade-in) */
        .floating-message.fade-in {
            opacity: 1;
            transform: translateY(0); /* Volver a la posición original */
        }

        /* Animación de salida (fade-out) */
        .floating-message.fade-out {
            opacity: 0;
            transform: translateY(-20px); /* Desplazar hacia arriba al salir */
        }

        .floating-message-success {
            background: linear-gradient(to bottom, #fbeec1, #f5d19a); /* Gradiente cálido estilo cafetería */
            color: #5c3d2e; /* Texto en marrón oscuro */
            border: 1px solid #e5b887; /* Borde marrón suave */
            box-shadow: 0px 4px 6px rgba(92, 61, 46, 0.3); /* Sombra para dar profundidad */
        }

        /* Efecto hover para el mensaje de éxito */
        .floating-message-success:hover {
            background: linear-gradient(to bottom, #f5d19a, #fbeec1); /* Invertir el gradiente al pasar */
            box-shadow: 0px 6px 10px rgba(92, 61, 46, 0.5); /* Aumentar la sombra al pasar */
        }

        .floating-message-error {
            background: linear-gradient(to bottom, #fce4e4, #f8b8b8); /* Gradiente de tonos rosados suaves */
            color: #8b1e24; /* Texto en un rojo marrón oscuro */
            border: 1px solid #e78d8d; /* Borde rojo suave */
            box-shadow: 0px 4px 6px rgba(139, 30, 36, 0.3); /* Sombra para dar profundidad */
            font-family: 'Arial', sans-serif; /* Fuente profesional */
            padding: 15px;
            border-radius: 8px; /* Bordes más redondeados */
            animation: shake 0.3s ease-in-out; /* Animación de sacudida suave */
        }

        /* Hover Effect */
        .floating-message-error:hover {
            background: linear-gradient(to bottom, #f8b8b8, #fce4e4); /* Invertir gradiente al pasar */
            box-shadow: 0px 6px 10px rgba(139, 30, 36, 0.5); /* Aumentar la sombra */
        }

        .floating-message-warning {
            background-color: #fff3cd;
            color: #856404;
            border: 1px solid #ffeeba;
        }

        .floating-message-info {
            background-color: #d1ecf1;
            color: #0c5460;
            border: 1px solid #bee5eb;
        }

        /* Botón de cierre */
        .floating-message .close-btn {
            margin-left: 15px;
            color: inherit;
            cursor: pointer;
            font-size: 16px;
            font-weight: bold;
            line-height: 1;
            background: none;
            border: none;
        }

        .floating-message .close-btn:hover {
            opacity: 0.7;
        }

        @@keyframes shake {
            0%, 100% {
                transform: translateX(0);
            }
            25% {
                transform: translateX(-5px);
            }
            50% {
                transform: translateX(5px);
            }
            75% {
                transform: translateX(-5px);
            }
        }
    </style>
    <script src="~/js/modal.js"></script>
    <script src="https://kit.fontawesome.com/eb496ab1a0.js" crossorigin="anonymous"></script>
}

<main id="panel_usuario">
    <section class="user-panel-section py-4">
        <div class="container">
            <!-- Bienvenida al Usuario -->
            <br><br><br>
            <div class="row mb-4">
                <div class="col-12 d-flex align-items-center">
                    <h2 class="text-center rounded shadow">
                        <i class="bi bi-person-circle"></i>
                        Rol: <span class="text-uppercase">@Model.UsuarioStatus ?? "Usuario"</span>
                        (Bienvenido, @Model.UsuarioNombre @Model.UsuarioApellido)
                    </h2>

                    <ul class="menu-options">
                        <li class="switch">
                            <i class='bx bxs-sun'></i>
                            <i class='bx bxs-moon'></i>
                        </li>
                    </ul>
                </div>
            </div>

            <!-- Información y Panel Principal -->
            <div class="row">
                <!-- Columna de Carritos del Usuario -->
                <div class="col-md-12">
                    <div class="bg-light p-3 rounded shadow-sm">
                        <h3 class="text-center bg-secondary text-light py-2 rounded">
                            <i class="bi bi-basket-fill"></i> Mis Carritos
                        </h3>
                        <table class="table table-striped table-hover mt-3 rounded shadow-sm">
                            <thead class="table-dark">
                            <tr>
                                <th>#</th>
                                <th>Código de Carrito</th>
                                <th>Fecha de Modificación</th>
                                <th>Estado</th>
                            </tr>
                            </thead>
                            <tbody>
                            @if (Model.Carritos != null && Model.Carritos.Any())
                            {
                                foreach (var carrito in Model.Carritos)
                                {
                                    <tr>
                                        <td>@Model.Carritos.IndexOf(carrito) + 1</td>
                                        <td>@carrito.Codigo</td>
                                        <td>@carrito.Fecha.ToString("dd/MM/yyyy HH:mm:ss")</td>
                                        <td>@carrito.Estado</td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="4" class="text-center">No tienes carritos registrados.</td>
                                </tr>
                            }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <br>
        <br>
        <br>
        <br>
        <br>
        <br>
        <br>
        <br>
        <br>
        <br>
        <br>
        <br>
        <br>
        <br>
        <br>
        <br>
        <br>
        <br>
        <br>
        <br>
        <br>
        <br>
        <br>
        <br>
        <br>
        <br>
        <br>
        <br>
        <br>
        <br>
        <br>
        <br>
    </section>
</main>

@section stylesheets_inferiores {
    <script>
    document.addEventListener("DOMContentLoaded", () => {
        const carritoTexto = document.querySelector(".carrito-texto");
        const carritoIcono = document.querySelector(".carrito-icono");

        function actualizarCarrito() {
            const anchoVentana = window.innerWidth;

            if (anchoVentana <= 550) {
                carritoTexto.style.display = "none"; // Ocultar texto en pantallas muy pequeñas
                carritoIcono.style.display = "flex"; // Mostrar ícono
            } else if (anchoVentana > 550 && anchoVentana <= 992) {
                carritoTexto.style.display = "inline-block"; // Mostrar texto en pantallas medianas
                carritoIcono.style.display = "none"; // Ocultar ícono
            } else {
                carritoTexto.style.display = "inline-block"; // Mostrar texto en pantallas grandes
                carritoIcono.style.display = "none"; // Ocultar ícono
            }
        }

        // Ejecutar al cargar la página
        actualizarCarrito();

        // Ejecutar al redimensionar la ventana
        window.addEventListener("resize", actualizarCarrito);
    });
    document.addEventListener("DOMContentLoaded", () => {
        const switchElement = document.querySelector(".switch");
        const darkModeClass = "dark-mode";
        const header = document.querySelector("header");

        // Verificar el estado inicial del modo oscuro en localStorage
        const darkModePreference = localStorage.getItem("darkMode");

        if (darkModePreference === "enabled") {
            // Si está habilitado el modo oscuro, activarlo
            document.body.classList.add(darkModeClass);
            header.classList.add("dark-header"); // Agregar clase al header
            switchElement.classList.add("active"); // Reflejar el estado en el switch
        } else {
            // Si no está habilitado, asegurar que esté en modo claro
            document.body.classList.remove(darkModeClass);
            header.classList.remove("dark-header");
            switchElement.classList.remove("active");
        }

        // Alternar entre claro y oscuro al hacer clic en el switch
        switchElement.addEventListener("click", () => {
            const isDarkModeEnabled = document.body.classList.toggle(darkModeClass);
            header.classList.toggle("dark-header");
            switchElement.classList.toggle("active");

            // Guardar la preferencia del usuario en localStorage
            if (isDarkModeEnabled) {
                localStorage.setItem("darkMode", "enabled");
            } else {
                localStorage.setItem("darkMode", "disabled");
            }
        });
    });

</script>
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const carritoTexto = document.querySelector(".carrito-texto");
            const carritoIcono = document.querySelector(".carrito-icono");

            function actualizarCarrito() {
                const anchoVentana = window.innerWidth;

                if (anchoVentana <= 550) {
                    carritoTexto.style.display = "none"; // Ocultar texto en pantallas muy pequeñas
                    carritoIcono.style.display = "flex"; // Mostrar ícono
                } else if (anchoVentana > 550 && anchoVentana <= 992) {
                    carritoTexto.style.display = "inline-block"; // Mostrar texto en pantallas medianas
                    carritoIcono.style.display = "none"; // Ocultar ícono
                } else {
                    carritoTexto.style.display = "inline-block"; // Mostrar texto en pantallas grandes
                    carritoIcono.style.display = "none"; // Ocultar ícono
                }
            }

            // Ejecutar al cargar la página
            actualizarCarrito();

            // Ejecutar al redimensionar la ventana
            window.addEventListener("resize", actualizarCarrito);
        });
    </script>
    <script src="~/js/main.js'"></script>
    <script src="~/js/modal.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const floatingMessages = document.querySelectorAll(".floating-message");

            floatingMessages.forEach((message) => {
                // Animación de entrada (fade-in) al cargar el mensaje
                setTimeout(() => {
                    message.classList.add("fade-in");
                }, 100); // Retraso mínimo para garantizar que la animación se vea

                // Animación de salida (fade-out) después de 3 segundos
                setTimeout(() => {
                    message.classList.remove("fade-in");
                    message.classList.add("fade-out"); // Aplicar clase de salida

                    // Eliminar completamente el mensaje después de la animación de salida
                    setTimeout(() => {
                        message.remove();
                    }, 500); // 500 ms coincide con la duración de la transición CSS
                }, 3000); // Mostrar el mensaje durante 3 segundos antes de iniciar la salida
            });
        });
    </script>

}