@page "{id?}"
@model BibliotecaStandFree.Pages.Editar.EditarCartasModel
@{
    ViewData["Title"] = $"Editar Carta - {Model.Carta?.CarNombre}";
}

@section stylesheets_superiores {
    <link rel="stylesheet" href="~/css/styles.css"/>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css">
    <link href="https://fonts.googleapis.com/css2?family=Dancing+Script&display=swap" rel="stylesheet">
    <style>
    .btn-wsp {
        position: fixed;
        width: 60px;
        height: 60px;
        bottom: 25px;
        right: 25px;
        background: #fff;
        color: #FFF;
        border-radius: 50%;
        text-align: center;
        font-size: 35px;
        box-shadow: 0px 1px 10px rgba(0, 0, 0, 0.3);
        z-index: 100;
        transition: all 300ms ease;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .btn-wsp:hover {
        background: #d0ffd9;
    }

    .btn-wsp img {
        width: 100%; /* Hace que la imagen ocupe todo el ancho del contenedor */
        height: 100%; /* Hace que la imagen ocupe toda la altura del contenedor */
        object-fit: cover; /* Ajusta la imagen para llenar completamente el contenedor sin distorsionar */
        border-radius: 50%; /* Mantiene el borde redondeado de la imagen */
    }

    @@media only screen and (min-width: 320px) and (max-width: 768px) {
    .btn-wsp {
        width: 63px;
        height: 63px;
    }

    .btn-wsp img {
        width: 100%; /* Ajusta el tamaño para que llene el nuevo tamaño del botón */
        height: 100%; /* Ajusta el tamaño para que llene el nuevo tamaño del botón */
    }
    }

</style>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
    <style>
    /* Estilo general del formulario */
    .form-container {
        max-width: 700px;
        margin: 0 auto;
        background-color: #fff;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        font-family: 'Arial', sans-serif;
    }

    /* Título */
    .form-header {
        text-align: center;
        font-size: 24px;
        font-weight: bold;
        color: #3d2f2f;
        margin-bottom: 20px;
    }

    /* Labels */
    .form-label {
        font-size: 16px;
        font-weight: bold;
        color: #6c5b5b;
    }

    /* Inputs */
    .form-control {
        border-radius: 8px;
        border: 1px solid #ccc;
        padding: 10px;
        font-size: 14px;
        color: #333;
        transition: all 0.3s ease;
    }

    .form-control:focus {
        border-color: #b98c6a;
        box-shadow: 0 0 5px rgba(185, 140, 106, 0.8);
        outline: none;
    }

    /* Botones */
    .btn-primary {
        background-color: #6c4f3d;
        border: none;
        color: #fff;
        padding: 10px 20px;
        font-size: 16px;
        border-radius: 8px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .btn-primary:hover {
        background-color: #5a3f2d;
    }

    .btn-secondary {
        background-color: #b8b1a6;
        border: none;
        color: #fff;
        padding: 10px 20px;
        font-size: 16px;
        border-radius: 8px;
        margin-left: 10px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .btn-secondary:hover {
        background-color: #a1998f;
    }

    /* Contenedor */
    .mb-3 {
        margin-bottom: 15px;
    }

    /* Responsividad */
    @@media (max-width: 768px) {
    .form-container {
        padding: 15px;
    }

    .btn-primary, .btn-secondary {
        width: 100%;
        margin-bottom: 10px;
    }
    }

</style>
    <style>
    /* Contenedor del carrito */
    .carrito-container {
        display: flex;
        align-items: center;
    }

    /* Texto del carrito (visible en pantallas pequeñas y medianas) */
    .carrito-texto {
        display: none; /* Oculto por defecto */
        font-size: 16px;
        text-decoration: none;
        color: #333;
    }

    /* Ícono del carrito (visible por defecto en pantallas grandes) */
    .carrito-icono {
        display: none; /* Oculto por defecto */
        align-items: center;
        text-decoration: none;
        color: #333;
        font-size: 20px;
        position: relative;
    }

    /* Media query para pantallas pequeñas y medianas (≤ 992px) */
    @@media (max-width: 992px) {
    .carrito-texto {
        display: inline-block; /* Mostrar texto */
    }

    .carrito-icono {
        display: none; /* Ocultar ícono */
    }
    }

    /* Media query para pantallas grandes (> 992px) */
    @@media (min-width: 993px) {
    .carrito-texto {
        display: inline-block;
    }

    .carrito-icono {
        display: none; /* Ocultar ícono */
    }
    }

    .table-hover tbody tr:hover {
        background-color: #f9f9f9;
    }

    .bg-secondary {
        background-color: #6c757d !important;
    }

    .bg-warning {
        background-color: #ffe8b6 !important;
    }

    .text-dark {
        color: #343a40 !important;
    }
</style>
    <style>
    /* Contenedor de mensajes flotantes */
    .floating-messages-container {
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 1000;
        max-width: 320px;
        font-family: 'Georgia', serif; /* Fuente más amigable */
    }

    /* Estilo base para los mensajes */
    .floating-message {
        margin-bottom: 10px;
        padding: 15px;
        border-radius: 8px;
        font-size: 15px;
        display: flex;
        align-items: center;
        justify-content: space-between;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
        background: linear-gradient(to bottom, #fff9f0, #fff3e6); /* Fondo cálido */
        opacity: 0; /* Por defecto invisible */
        transform: translateY(-20px); /* Posición inicial para animación */
        transition: opacity 0.5s ease, transform 0.5s ease;
        border: 1px solid #d6ccc2; /* Borde suave */
    }


    /* Animación de entrada (fade-in) */
    .floating-message.fade-in {
        opacity: 1;
        transform: translateY(0); /* Volver a la posición original */
    }

    /* Animación de salida (fade-out) */
    .floating-message.fade-out {
        opacity: 0;
        transform: translateY(-20px); /* Desplazar hacia arriba al salir */
    }

    .floating-message-success {
        background: linear-gradient(to bottom, #fbeec1, #f5d19a); /* Gradiente cálido estilo cafetería */
        color: #5c3d2e; /* Texto en marrón oscuro */
        border: 1px solid #e5b887; /* Borde marrón suave */
        box-shadow: 0px 4px 6px rgba(92, 61, 46, 0.3); /* Sombra para dar profundidad */
    }

    /* Efecto hover para el mensaje de éxito */
    .floating-message-success:hover {
        background: linear-gradient(to bottom, #f5d19a, #fbeec1); /* Invertir el gradiente al pasar */
        box-shadow: 0px 6px 10px rgba(92, 61, 46, 0.5); /* Aumentar la sombra al pasar */
    }

    .floating-message-error {
        background: linear-gradient(to bottom, #fce4e4, #f8b8b8); /* Gradiente de tonos rosados suaves */
        color: #8b1e24; /* Texto en un rojo marrón oscuro */
        border: 1px solid #e78d8d; /* Borde rojo suave */
        box-shadow: 0px 4px 6px rgba(139, 30, 36, 0.3); /* Sombra para dar profundidad */
        font-family: 'Arial', sans-serif; /* Fuente profesional */
        padding: 15px;
        border-radius: 8px; /* Bordes más redondeados */
        animation: shake 0.3s ease-in-out; /* Animación de sacudida suave */
    }

    /* Hover Effect */
    .floating-message-error:hover {
        background: linear-gradient(to bottom, #f8b8b8, #fce4e4); /* Invertir gradiente al pasar */
        box-shadow: 0px 6px 10px rgba(139, 30, 36, 0.5); /* Aumentar la sombra */
    }

    .floating-message-warning {
        background-color: #fff3cd;
        color: #856404;
        border: 1px solid #ffeeba;
    }

    .floating-message-info {
        background-color: #d1ecf1;
        color: #0c5460;
        border: 1px solid #bee5eb;
    }

    /* Botón de cierre */
    .floating-message .close-btn {
        margin-left: 15px;
        color: inherit;
        cursor: pointer;
        font-size: 16px;
        font-weight: bold;
        line-height: 1;
        background: none;
        border: none;
    }

    .floating-message .close-btn:hover {
        opacity: 0.7;
    }

    @@keyframes shake {
        0%, 100% {
            transform: translateX(0);
        }
        25% {
            transform: translateX(-5px);
        }
        50% {
            transform: translateX(5px);
        }
        75% {
            transform: translateX(-5px);
        }
    }
</style>
    <script src="~/js/modal.js"></script>
    <script src="https://kit.fontawesome.com/eb496ab1a0.js" crossorigin="anonymous"></script>
}

<main class="container my-4">

    @if (TempData["Error"] != null)
    {
    <div class="alert alert-danger">
        @TempData["Error"]
    </div>
    }

    @if (TempData["Success"] != null)
    {
    <div class="alert alert-success">
        @TempData["Success"]
    </div>
    }

    <div class="form-container mt-5">

        <div class="form-header">Editar Carta</div>
        <form method="post" class="mt-4">
            <div class="form-group mb-3">
                <label for="carCodigo">Código:</label>
                <input type="text" id="carCodigo" class="form-control" value="@Model.Carta.CarCodigo" disabled />
            </div>

            <div class="form-group mb-3">
                <label for="carNombre">Nombre:</label>
                <input type="text" id="carNombre" name="Carta.CarNombre" class="form-control" value="@Model.Carta.CarNombre" required />
                <span asp-validation-for="Carta.CarNombre" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label for="carDescripcion">Descripción:</label>
                <textarea id="carDescripcion" name="Carta.CarDescripcion" class="form-control" rows="4">@Model.Carta.CarDescripcion</textarea>
                <span asp-validation-for="Carta.CarDescripcion" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label for="carPrecio">Precio:</label>
                <input type="number" id="carPrecio" name="Carta.CarPrecio" class="form-control" value="@Model.Carta.CarPrecio" min="0.01" step="0.01" required />
                <span asp-validation-for="Carta.CarPrecio" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label for="carCantidad">Cantidad:</label>
                <input type="number" id="carCantidad" name="Carta.CarCantidad" class="form-control" value="@Model.Carta.CarCantidad" min="0" required />
                <span asp-validation-for="Carta.CarCantidad" class="text-danger"></span>
            </div>

            <div class="form-group text-center">
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-save"></i> Guardar Cambios
                </button>
                <a asp-page="/Gestionar/GestionarCartas" class="btn btn-secondary">
                    <i class="bi bi-arrow-left"></i> Cancelar
                </a>
            </div>
        </form>

    </div>
</main>

<script>
    document.querySelector('form').addEventListener('submit', function (e) {
        // Redireccionar automáticamente a GestionarCartas después de enviar.
        window.location.href = '/Gestionar/GestionarCartas';
    });
</script>

@section stylesheets_inferiores {
    <script>
    document.addEventListener("DOMContentLoaded", () => {
        const carritoTexto = document.querySelector(".carrito-texto");
        const carritoIcono = document.querySelector(".carrito-icono");

        function actualizarCarrito() {
            if (window.innerWidth <= 992) {
                carritoTexto.style.display = "inline-block"; // Mostrar texto
                carritoIcono.style.display = "none"; // Ocultar ícono
            } else {
                carritoTexto.style.display = "none"; // Ocultar texto
                carritoIcono.style.display = "flex"; // Mostrar ícono
            }
        }

        // Ejecutar al cargar y redimensionar
        actualizarCarrito();
        window.addEventListener("resize", actualizarCarrito);
    });
</script>


    <script>
    document.addEventListener("DOMContentLoaded", function () {
        const floatingMessages = document.querySelectorAll(".floating-message");

        floatingMessages.forEach((message) => {
            // Animación de entrada (fade-in) al cargar el mensaje
            setTimeout(() => {
                message.classList.add("fade-in");
            }, 100); // Retraso mínimo para garantizar que la animación se vea

            // Animación de salida (fade-out) después de 3 segundos
            setTimeout(() => {
                message.classList.remove("fade-in");
                message.classList.add("fade-out"); // Aplicar clase de salida

                // Eliminar completamente el mensaje después de la animación de salida
                setTimeout(() => {
                    message.remove();
                }, 500); // 500 ms coincide con la duración de la transición CSS
            }, 3000); // Mostrar el mensaje durante 3 segundos antes de iniciar la salida
        });
    });
</script>
}